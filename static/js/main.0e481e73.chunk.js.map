{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Fish.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","age","Fish","handleClick","addToOrder","index","details","name","price","status","desc","image","isAvailable","src","alt","disabled","onClick","Order","renderOrder","key","fish","fishes","count","order","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","authHandler","authData","a","fetch","storeId","context","store","owner","post","data","user","uid","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","state","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","storeID","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e481e73.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from \"../helpers.js\";\r\n\r\nclass StorePicker extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. Get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/input\r\n    // StorePicker is a child of Router.\r\n    // If you investigate the StorePicker props there is a history.push()\r\n    //  method we want to access.\r\n    // This results to faster loading because we're not reloading the page,\r\n    // just tell Router to load another component instead of StorePicker.\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Plese Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store ➜</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ tagline, age }) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>\r\n        {tagline} {age}\r\n      </span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  age: PropTypes.oneOfType([\r\n    PropTypes.string.isRequired,\r\n    PropTypes.number.isRequired,\r\n  ]),\r\n  tagline: PropTypes.string.isRequired\r\n};\r\n\r\n/* Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"top\">\r\n        <h1>\r\n          Catch\r\n          <span className=\"ofThe\">\r\n            <span className=\"of\">Of</span>\r\n            <span className=\"the\">The</span>\r\n          </span>\r\n          Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n          <span>{this.props.tagline}</span>\r\n        </h3>\r\n      </header>\r\n    )\r\n  }\r\n}*/\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n  // we declare ONE propType for all of the fish components. This will\r\n  // result in a reusable code\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n  };\r\n\r\n  // addToOrder custom method needs to be accessed inside of this component\r\n  // as an onClick event handler\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const { name, price, status, desc, image } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Fish from \"./Fish\";\r\nimport { formatPrice } from \"../helpers\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n\r\n  renderOrder = (key) => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    // To write reusable code within the CSSTransition,\r\n    // instead of having props inside of our XML tag,\r\n    // we converted it into object properties.\r\n    // The timeout property's value is an object literal.\r\n    // Then we spread the object into the CSSTransition tag, see below:\r\n    // <CSSTransition  {...transitionOptions}>\r\n    const transitionOptions = {\r\n      classNames: \"order\",\r\n      key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // Check if fish is available. Otherwise status will not update\r\n    // in the componentDidMount() lifecycle event\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    // Make sure the fish is loaded accordingly.\r\n    if (!fish) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"fish\"} is no longer available.\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = (event) => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. Creating fish object to collect form data in a single variable\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    // 3. Passing in our fish object above to state with the addFish() method\r\n    // from the App component where state lives.\r\n    this.props.addFish(fish);\r\n    // 4. Refresh the AddFishForm with a reset() method\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          ref={this.descRef}\r\n          type=\"text\"\r\n          placeholder=\"Desc\"\r\n        />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func\r\n  }\r\n\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.currentTarget.value);\r\n    // update the fish\r\n    // 1. Take a copy of the current fish\r\n    // Using ES6 computed property names\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = (props) => (\r\n  <nav className=\"Login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory</p>\r\n    <button\r\n      className=\"github\"\r\n      onClick={() => props.authenticate(\"Github\")}\r\n    >\r\n      Log in with GitHub\r\n    </button>\r\n    <button\r\n      className=\"facebook\"\r\n      onClick={() => props.authenticate(\"Facebook\")}\r\n    >\r\n      Log in with Facebook\r\n    </button>\r\n    <button\r\n      className=\"twitter\"\r\n      onClick={() => props.authenticate(\"Twitter\")}\r\n    >\r\n      Log in with Twitter\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCIBNzethEKeXWqKW5XfC4XP__RCHz8Y2M\",\r\n  authDomain: \"catch-of-the-day-df2e3.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-df2e3.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\n// importing a default and a named export\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  // adding local state to Inventory component\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      uid: null,\r\n      owner: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n        this.authHandler({ user });\r\n      }\r\n    })\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    // The fetch() method returns a promise. If we want to return the store\r\n    // and not the promise, we have to put an await in front of it.\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if ther is no owner ie. if we are the first owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  // We created an authProvider const to dynamically handle which authProvider\r\n  // they want to sign in with. Then we use firebaseApp auth, signInWithPopup\r\n  // methods. After login is proceed, the then() method will pass down the\r\n  // login data to the authHandler custom method.\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n  };\r\n\r\n  // The await async method delays the implementation of our logout event\r\n  // handler until the users actually log out from their account.\r\n  logout = async () => {\r\n    console.log(\"Logging out.\");\r\n    await firebase.auth().signOut();\r\n    this.setState({\r\n      uid: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log out</button>\r\n\r\n    // 1. Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry, you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // 3. They must be the owner, so render the inventory\r\n\r\n      return (\r\n        <div className=\"Inventory\">\r\n          <h2>Inventory</h2>\r\n          {logout}\r\n          {Object.keys(this.props.fishes).map((key) => (\r\n            <EditFishForm\r\n              key={key}\r\n              index={key}\r\n              fish={this.props.fishes[key]}\r\n              updateFish={this.props.updateFish}\r\n              deleteFish={this.props.deleteFish}\r\n            />\r\n          ))}\r\n          <AddFishForm addFish={this.props.addFish} />\r\n          <button onClick={this.props.loadSampleFishes}>\r\n            Load Sample Fishes\r\n          </button>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // 1. reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeID}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\",\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of the existing state for immutation purposes\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to the fishes variable.\r\n    // Add a timestamp for unique identification\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes }); // If the property and value are the same,\r\n    // in ES6 we can just pass the word just once.\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy of state\r\n    const fishes = { ...this.state.fish };\r\n    // 2. update the state - remove an item\r\n    fishes[key] = null;\r\n    // 3. update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // Update fish data from EditFishForm\r\n    // Params: key: which fish is going to be updated?\r\n    // updatedFish: const from the EditFishForm handleChange event handler\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 0. addToOrder(key) custom method takes in a key argument.\r\n    // Since this method needs to be accessed via Fish component,\r\n    // key props is declared and passed down via props as the object key\r\n    // in the JSX element in render.\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add it to order or increment quantity\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. update the state - remove an item\r\n    // Since we're not using Firebase, we can use \"delete\"\r\n    delete order[key];\r\n    // 3. update state\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\"/>\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n          deleteFish={this.deleteFish}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeID}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/react-cotd\" component={StorePicker} />\r\n      <Route path=\"/store/:storeID\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport \"./css/style.css\";\r\nimport StorePicker from \"./components/StorePicker\";\r\nimport App from \"./components/App\";\r\nimport Router from \"./components/Router\";\r\n\r\nrender(<Router />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}